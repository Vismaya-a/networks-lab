//NO of identifiers,operators
//Vismaya A M
//ROll NO:89
%{
#include <stdio.h>
#include <ctype.h>

int statement_count = 0;
int identifier_count = 0;
int assignment_count = 0;
int relational_count = 0;
int integer_count = 0;

void yyerror(const char *s);
%}

%%

; { statement_count++;}          
[a-zA-Z_][a-zA-Z0-9_]* { identifier_count++; }
==|!=|<=|>=|<|> { relational_count++; }    
= { assignment_count++; }                 
[0-9]+ { integer_count++; }                 
[ \t\n]+

.  ;

%%

int main(int argc, char **argv) {
    extern FILE *yyin;
    yyin=fopen("input.c","r");
    yylex();  // Start scanning input
    printf("Number of statements: %d\n", statement_count);
    printf("Number of identifiers: %d\n", identifier_count);
    printf("Number of assignment operators: %d\n", assignment_count);
    printf("Number of relational operators: %d\n", relational_count);
    printf("Number of integers: %d\n", integer_count);
    return 0;
}

void yyerror(const char *s) {
    fprintf(stderr, "Error: %s\n", s);
}
/*OUTPUT
./a.out p3.c 
Number of statements: 15
Number of identifiers: 49
Number of relational operators: 6
Number of assignment operators: 7
Number of integers: 11*/





//begin-end
//Vismaya A M
//Roll NO:89
%{
#include <stdio.h>
#include <stdlib.h>
FILE *outfile;
%}
%%
"{" {fprintf(outfile,"begin");}
"}" {fprintf(outfile,"end");}
.|\n {fprintf(outfile,"%s",yytext);}
%%
int main(int argc,char **argv){
	FILE *infile=fopen(argv[1],"r");
	if(!infile){
		printf("error in opening input file\n");
		return 1;
	}
	outfile=fopen(argv[2],"w");
	
	if(!outfile){
		printf("error in opening output file\n");
		fclose(infile);
		return 1;
	}
	yyin=infile;	
	yylex();
	fclose(infile);
	fclose(outfile);
	printf("successfully copied");
	return 0;
}
/*output
#include<stdio.h>
int main()
begin
int a=1,b=2;
if(a<b)
	a=b;
return 0;
end
*/





//Vowel count
//Vismaya A M
//Roll No:89

%{
#include <stdio.h>

int vowels = 0;
int consonants = 0;
%}

%%

[aAeEiIoOuU]         { vowels++;}
[a-zA-Z]  { consonants++; }
\n {printf("Number of vowels: %d\n", vowels);
    printf("Number of consonants: %d\n", consonants);return 0;}
%%


int main() {
    printf("Enter a string: \n");
    yylex();
    

    return 0;
}
/*OUTPUT
rhythm
Vowels: 0
education
Vowels: 5
mishal
Vowels: 2
*/



//valid identifier lex
//Vismaya A M
//ROll NO:89

%{

#include <stdio.h>
#include <ctype.h>
%}


%%
[a-zA-Z_][a-zA-Z0-9_]*  {printf("Valid\n");}

.*  {printf("Invalid\n");}

[ \t\n]+  {}

%%


int main(int argc, char **argv) {
    yylex();  
    return 0;
}
/*
Enter a string: 
123abc
 123abc is not a identifier

Enter a string: 
abc1234
 abc1234 is a identifier
*/













//1_anbn.l
//Vismaya A M
//Roll No:89
%{
    #include <stdio.h>
    #include "y.tab.h"
    #include <stdlib.h>
%}
%%
a {return A;}
b {return B;}
\n {return NL;}
. {printf("invallid input");exit(0);}
%%
int yywrap(){
    return 1;
}



//1_anbn.y
//Vismaya A M
//Roll No:89
%{
    #include <stdio.h>
    #include <stdlib.h>

%}
%token A B NL
%%
stmt: S NL {printf("Valid string");exit(0);}
;
S: A S B | 
;
%%
int yyerror(char *msg) 
{ 
printf("invalid string\n"); 
exit(0); 
} 
int main(){
    printf("Enter a String: ");
    yyparse();
    return 0;
}
//Enter a stirng :aaabbb
//Valid string
//Enter a string:abc
//inalid string



//Yacc valid Arithmetic Expr.l
//Vismaya A M 
//Roll No:89

%{
#include <stdio.h>
#include "y.tab.h"
extern yylval;
%}
%%
[0-9]+    { 
              yylval = atoi(yytext); 
              return NUMBER; 
            } 
[a-z]+  { 
              yylval = atoi(yytext); 
              return NUMBER; 
            } 
\n {return 0;}
. {return yytext[0];} 
%%
int yywrap(){
    return 1;
}



//Yacc valid Arithmetic Expr.y
//Vismaya A M 
//Roll No:89

%{
    #include <stdio.h>
    #include <stdlib.h>

%}
%token NUMBER
%left '+' '-'
%left '*' '/'

%%
stmt: T {printf("Valid expression");exit(0);}
;
T:  T '+' T {$$ = $1 + $3;}|
    T '-' T {$$ = $1 - $3;}|
    T '*' T {$$ = $1 * $3;}|
    T '/' T {$$ = $1 + $3;}|
    '(' T ')' { $$ = $2;}|
    NUMBER
;
%%
int yyerror(char *msg) 
{ 
printf("invalid string\n"); 
exit(0); 
} 
int main(){
    printf("Enter a arithmetic expression: ");
    yyparse();
}
//Enter a arithmetic expression: 1+2=3
//valid string
//Enter a arithmetic expression: 1+2+3-=3
//invalid string




//4_IF.l
//Vismaya A M
//Roll No:89
%{
#include "y.tab.h"
%}
%%

\n ;
"\t" ;
" "+ ;
if {return IF;}
else {return ELSE;}
== |
!= {return EQ;}
">" | 
"<" {return REL;}
[a-z]+ {return ID;}
[0-9]+ {return NUM;}

. {return yytext[0];}
%%
int yywrap(){
    return 1;
}



//4_IF.y
//Vismaya A M
//Roll No:89
%{
    #include <stdio.h>
    #include <stdlib.h>
%}
%token IF ELSE EQ ID NUM REL

%%
S: stmt {printf("Valid statement");exit(0);}
;
stmt:  IF '(' cond ')' '{' T '}'
;
cond: ID REL ID |
      ID REL NUM |
      ID EQ NUM |
      ID EQ ID |
      ID |
      NUM
;

      
T: code ';' T |
;
code:   ID '=' ID   |
        ID '=' NUM  |
        ID '+' NUM  |
        ID '-' NUM  |
        ID '+' ID   |
        ID '-' ID   |
        ID '=' NUM '+' NUM 
        
        
;
%%
int yyerror(char *msg){
    printf("Invalid");

}
int main(){
    extern FILE *yyin;
    yyin = fopen("input.c","r");
    yyparse();
}
//input.c -> if (a > 5)  b = 10; c = 20; }
//invalid
//if (a > 5)  {b = 10; c = 20; }
